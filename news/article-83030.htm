<!doctype html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://vpndownload.github.io/news/article-83030.htm" />
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>SpringMVC获取请求参数笔记整理_java_</title>
        <meta name="description" content="目录  前言 一、使用ServletAPI获取参数 二、通过控制器方法的形参获取请求参数 三、@RequestParam 四、@RequestHeader 五、@CookieValue 六、通过实体类" />
        <link rel="icon" href="/assets/website/img/clashshare/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="VPN下载 免费节点订阅中文网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://vpndownload.github.io/news/article-83030.htm" />
    <meta property="og:site_name" content="VPN下载 免费节点订阅中文网" />
    <meta property="og:title" content="SpringMVC获取请求参数笔记整理_java_" />
    <meta property="og:image" content="https://vpndownload.github.io/uploads/20240525/13cfef86d649513799e5beefc5419aae.webp" />
        <meta property="og:release_date" content="2025-03-28T09:53:04" />
    <meta property="og:updated_time" content="2025-03-28T09:53:04" />
        <meta property="og:description" content="目录  前言 一、使用ServletAPI获取参数 二、通过控制器方法的形参获取请求参数 三、@RequestParam 四、@RequestHeader 五、@CookieValue 六、通过实体类" />
        
    <link href="//fonts.googleapis.com/css2?family=Nunito:ital,wght@0,300;0,400;0,600;0,700;0,800;1,300&display=swap" rel="stylesheet">
    <!-- Template CSS -->
    <link rel="stylesheet" href="/assets/website/css/clashshare/style-starter.css">

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="SpringMVC获取请求参数笔记整理_java_">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-7FRZVVJHJQ"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-7FRZVVJHJQ');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!--/header-w3l-->
    <div class="header-w3l">
        <!-- header -->
        <header id="site-header" class="fixed-top">
            <div class="container">
                <nav class="navbar navbar-expand-lg stroke">
                                        <a class="navbar-brand" href="/">
                        VPN下载                    </a>
                                        <!-- if logo is image enable this   
            <a class="navbar-brand" href="#index.html">
                <img src="image-path" alt="Your logo" title="Your logo" style="height:35px;" />
            </a> -->
                    <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                        <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                        <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                        </span>
                    </button>
                    <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                        <ul class="navbar-nav ml-lg-auto">
                                                        <li class="nav-item">
                                <a class="nav-link" href="/">首页</a>
                            </li>
                                                        <li class="nav-item">
                                <a class="nav-link" href="/free-nodes/">免费节点</a>
                            </li>
                                                        <li class="nav-item">
                                <a class="nav-link" href="/paid-subscribe/">推荐机场</a>
                            </li>
                                                        <li class="nav-item">
                                <a class="nav-link" href="/news/">新闻资讯</a>
                            </li>
                                                        <li class="nav-item">
                                <a class="nav-link" href="/client.htm">客户端</a>
                            </li>
                                                    </ul>
                    </div>
                    <!-- toggle switch for light and dark theme -->
                    <div class="mobile-position">
                        <nav class="navigation">
                            <div class="theme-switch-wrapper">
                                <label class="theme-switch" for="checkbox">
                                    <input type="checkbox" id="checkbox">
                                    <div class="mode-container">
                                        <i class="gg-sun"></i>
                                        <i class="gg-moon"></i>
                                    </div>
                                </label>
                            </div>
                        </nav>
                    </div>
                    <!-- //toggle switch for light and dark theme -->
                </nav>
            </div>
        </header>
        <!-- //header -->
    </div>
    <!--//header-w3l-->
    <!--/w3l-inner-page-breadcrumb-->
    <section class="w3l-inner-page-breadcrumb">
        <div class="breadcrumb-bg py-5">
            <div class="container pt-lg-5 pt-md-3 p-lg-4 pb-md-3 my-lg-3">
                <h2 class="title pt-5">SpringMVC获取请求参数笔记整理_java_</h2>
                <ul class="breadcrumbs-custom-path mt-3 text-center">
                    <li><a href="/">首页</a></li>
                    <li><a href="/news/">
                        <span class="fa fa-arrow-right mx-2" aria-hidden="true"></span> 新闻资讯</a>
                    </li>
                    <li class="active"><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span> 正文</li>
                </ul>
            </div>
        </div>
    </section>
    <!-- /w3l-content-2-->
    <div class="w3l-content-2 py-5">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="Clash Node官网订阅站" data-url="https://clashnode.github.io">
                  				  				  				<div id="navCategory"> <h5 class="catalogue">目录</h5> <ul class="first_class_ul"> <li><a href="#_label0" rel="nofollow">前言</a></li> <li><a href="#_label1" rel="nofollow">一、使用ServletAPI获取参数</a></li> <li><a href="#_label2" rel="nofollow">二、通过控制器方法的形参获取请求参数</a></li> <li><a href="#_label3" rel="nofollow">三、@RequestParam</a></li> <li><a href="#_label4" rel="nofollow">四、@RequestHeader</a></li> <li><a href="#_label5" rel="nofollow">五、@CookieValue</a></li> <li><a href="#_label6" rel="nofollow">六、通过实体类的形参获取参数</a></li> </ul> </div> <p class="maodian"><a name="_label0" rel="nofollow"></a></p> <h2>前言</h2> <p>本篇文章目的是为了<code>学习、记录和分享</code>博主在学习 <code>Spring MVC</code>过程中的笔记。同时也希望本篇文章能够帮助屏幕前的你！</p> <p class="maodian"><a name="_label1" rel="nofollow"></a></p> <h2>一、使用ServletAPI获取参数</h2> <p>通过 <strong>HttpServletRequest</strong> 当作形参，此时 <strong>HttpServletRequest</strong> 类型的参数表示封装了当前请求的请求报文的对象。</p> <p>测试案例：</p> <div class="ay1code"> <pre class="brush:java;"> @RequestMapping("/testParam")      public String testParam(HttpServletRequest request){          String username = request.getParameter("username");          String password = request.getParameter("password");          System.out.println("username:"+username+",password:"+password);          return "success";      }</pre> </div> <div class="ay1code"> <pre class="brush:java;">&lt;form method="get" action="/SpringMVC/testParam"&gt;      username: &lt;input  type="text"   name="username"/&gt;      password: &lt;input  type="password"   name="password"/&gt;      &lt;input type="submit" value="Submit" /&gt;  &lt;/form&gt;  </pre> </div> <p>运行结果：</p> <p style="text-align:center"><img decoding="async" alt="在这里插入图片描述" src="http://img.555519.xyz/uploads3/20220413/8820f3cdb01f9f5ebeb4f4ccb8128306.jpg"></p> <p class="maodian"><a name="_label2" rel="nofollow"></a></p> <h2>二、通过控制器方法的形参获取请求参数</h2> <p>在控制器方法的形参位置，设置和请求参数同名的形参，当浏览器发送请求，匹配到请求映射时，在 <strong>DispatcherServlet</strong> 中就会将请求参数赋值给相应的形参。</p> <p>测试用例：</p> <div class="ay1code"> <pre class="brush:java;">    @RequestMapping("/testParam")      public String testParam(String username,String password){          System.out.println("username:"+username+",password:"+password);          return "success";      }</pre> </div> <div class="ay1code"> <pre class="brush:java;">&lt;form method="get" action="/SpringMVC/testParam"&gt;      username: &lt;input  type="text"   name="username"/&gt;      password: &lt;input  type="password"   name="password"/&gt;      &lt;input type="submit" value="Submit" /&gt;  &lt;/form&gt;  </pre> </div> <p>运行结果：</p> <p style="text-align:center"><img decoding="async" alt="在这里插入图片描述" src="http://img.555519.xyz/uploads3/20220413/4fee52281a0c677acab2b6399d536b3b.jpg"></p> <p class="maodian"><a name="_label3" rel="nofollow"></a></p> <h2>三、@RequestParam</h2> <p>@RequestParam是将<code>请求参数</code>和<code>控制器方法的形参</code>创建映射关系！</p> <p>OK，我们可以来看一下 @<strong>RequestParam</strong> 的源码部分：</p> <div class="ay1code"> <pre class="brush:java;">@Target({ElementType.PARAMETER})  @Retention(RetentionPolicy.RUNTIME)  @Documented  public @interface RequestParam {      //别名name，一般默认为空      @AliasFor("name")      String value() default "";  	//指定为形参赋值的请求参数的参数名      @AliasFor("value")      String name() default "";  	//设置是否必须传输此请求参数，默认值为true      boolean required() default true;  	//用来定义默认值      String defaultValue() default "\n\t\t\n\t\t\n\ue000\ue001\ue002\n\t\t\t\t\n";  }  </pre> </div> <p>注：</p> <p>若<code>required</code>设置为<code>true</code>时，则当前请求必须传输<code>value</code>所指定的请求参数，若没有传输该请求参数，且没有设置<code>defaultValue</code>属性，则页面报错 <strong>400：Required String parameter ‘xxx’ is not present；</strong> 若设置为<code>false</code>，则当前请求不是必须传输<code>value</code>所指定的请求参数，若没有传输，则注解所标识的形参的值为<code>null</code>。</p> <div class="ay1code"> <pre class="brush:java;">    @RequestMapping(value = "/testParam", method = RequestMethod.POST)      public String testParam(@RequestParam(value = "user_name",required = false,defaultValue = "gg") String name,                              @RequestParam(value = "password",required = true,defaultValue = "hh") String pwd,                              String[] hobby) {            System.out.println(name + pwd + Arrays.toString(hobby));          return "success";      }  </pre> </div> <div class="ay1code"> <pre class="brush:java;">&lt;form th:action="@{/testParam}" method="post"&gt;      用户名：&lt;input type="name" name = "user_name"&gt;&lt;br&gt;      密码：&lt;input type="password" name = "password"&gt;&lt;br&gt;      爱好：&lt;input type="checkbox" name = "hobby" value="a"&gt;a      &lt;input type="checkbox" name = "hobby" value="b"&gt;b      &lt;input type="checkbox" name = "hobby" value="c"&gt;c&lt;br&gt;      &lt;input type="submit" value="测试"&gt;  &lt;/form&gt;  </pre> </div> <p><strong>运行结果：</strong></p> <p style="text-align:center"><img decoding="async" alt="在这里插入图片描述" src="http://img.555519.xyz/uploads3/20220413/acb85e472a3e01b5a05637db4699a9cd.jpg"></p> <p class="maodian"><a name="_label4" rel="nofollow"></a></p> <h2>四、@RequestHeader</h2> <p><code>@RequestHeader</code>是将请求头信息和控制器方法的形参创建映射关系。</p> <p><code>@RequestHeader</code>注解一共有三个属性：value、required、defaultValue，用法同<code>@RequestParam</code>。</p> <div class="ay1code"> <pre class="brush:java;">@RequestMapping(value = "/testParam2",method = RequestMethod.POST)  //形参位置的request表示当前请求  public String testParam2(@RequestParam("username") String name,                           @RequestParam("password") String pwd,                           String[] hobby,                           @RequestHeader("Host") String host){      System.out.println(name+pwd+ Arrays.toString(hobby));      System.out.println("Host:"+host);//输出结果Host:localhost:8080      return "success";  }</pre> </div> <p class="maodian"><a name="_label5" rel="nofollow"></a></p> <h2>五、@CookieValue</h2> <p><code>@CookieValue</code>是将<code>cookie</code>数据和控制器方法的形参创建映射关系</p> <p><code>@CookieValue</code>注解一共有三个属性：value、required、defaultValue，用法同<code>@RequestParam</code></p> <div class="ay1code"> <pre class="brush:java;">@CookieValue("JSESSIONID") String JSESSIONID  </pre> </div> <div class="ay1code"> <pre class="brush:java;">@Controller  @RequestMapping("hello")  public class HelloController2 {      @RequestMapping("show25")      public String test25(Model model, @CookieValue("JSESSIONID")String jsessionid){          model.addAttribute("msg", "获取cookie,jsessionid:" + jsessionid);          return "hello2";      }  }</pre> </div> <p class="maodian"><a name="_label6" rel="nofollow"></a></p> <h2>六、通过实体类的形参获取参数</h2> <p>首先需要创建一个实体类 <strong>User</strong></p> <div class="ay1code"> <pre class="brush:java;">package xiaobao.mvc.bean;  public class User {      private Integer id;      private String username;      private String password;      private Integer age;      private String sex;      private String email;      public Integer getId() {          return id;      }      public void setId(Integer id) {          this.id = id;      public String getUsername() {          return username;      public void setUsername(String username) {          this.username = username;      public String getPassword() {          return password;      public void setPassword(String password) {          this.password = password;      public Integer getAge() {          return age;      public void setAge(Integer age) {          this.age = age;      public String getSex() {          return sex;      public void setSex(String sex) {          this.sex = sex;      public String getEmail() {          return email;      public void setEmail(String email) {          this.email = email;      @Override      public String toString() {          return "User{" +                  "id=" + id +                  ", username='" + username + '\'' +                  ", password='" + password + '\'' +                  ", age=" + age +                  ", sex='" + sex + '\'' +                  ", email='" + email + '\'' +                  '}';  }  </pre> </div> <p>然后前端：</p> <div class="ay1code"> <pre class="brush:js;">&lt;form th:action="@{/testpojo}" method="post"&gt;      用户名：&lt;input type="text" name="username"&gt;&lt;br&gt;      密码：&lt;input type="password" name="password"&gt;&lt;br&gt;      性别：&lt;input type="radio" name="sex" value="男"&gt;男&lt;input type="radio" name="sex" value="女"&gt;女&lt;br&gt;      年龄：&lt;input type="text" name="age"&gt;&lt;br&gt;      邮箱：&lt;input type="text" name="email"&gt;&lt;br&gt;      &lt;input type="submit"&gt;  &lt;/form&gt;  </pre> </div> <p>后端：</p> <div class="ay1code"> <pre class="brush:java;">@RequestMapping("/testpojo")  public String testPOJO(User user){      System.out.println(user);      return "success";  }  </pre> </div> <p>运行结果：</p> <p style="text-align:center"><img decoding="async" alt="在这里插入图片描述" src="http://img.555519.xyz/uploads3/20220413/78c0fa6899105bef1603df908c2ac84c.jpg"></p> <p>因为我还没没有解决乱码，所以这个就一直乱码问题，等到后面我专门出一期这个文章来解决乱码的问题！</p> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-82317.htm">动物疫苗市场开放（动物疫苗经销商）</a></p>
                                        <p>下一个：<a href="/news/article-83031.htm">狗粮品牌有哪些品牌好一点（狗粮排行榜6大优质品牌）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-78198.htm" title="猫给抓了出一点点血要紧吗我和酒精擦了（猫抓了一下出了点血用酒精消毒可以吗）">猫给抓了出一点点血要紧吗我和酒精擦了（猫抓了一下出了点血用酒精消毒可以吗）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-12-node-share-links.htm" title="VPN下载 | 3月12日18.6M/S|免费SSR/V2ray/Clash/Shadowrocket免费节点地址">VPN下载 | 3月12日18.6M/S|免费SSR/V2ray/Clash/Shadowrocket免费节点地址</a></li>
                        <li class="py-2"><a href="/news/article-73444.htm" title="宠物领养合同违约金3000合法吗知乎 宠物领养合同违约金3000合法吗知乎">宠物领养合同违约金3000合法吗知乎 宠物领养合同违约金3000合法吗知乎</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-15-free-v2ray-subscribe.htm" title="VPN下载 | 3月15日20.2M/S|免费Clash/Shadowrocket/SSR/V2ray免费节点地址">VPN下载 | 3月15日20.2M/S|免费Clash/Shadowrocket/SSR/V2ray免费节点地址</a></li>
                        <li class="py-2"><a href="/news/article-73443.htm" title="宠物粮食市场营销调查问卷（宠物粮市场开发方案）">宠物粮食市场营销调查问卷（宠物粮市场开发方案）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-24-node-share-links.htm" title="VPN下载 | 3月24日22.8M/S|免费V2ray/SSR/Clash/Shadowrocket免费节点地址">VPN下载 | 3月24日22.8M/S|免费V2ray/SSR/Clash/Shadowrocket免费节点地址</a></li>
                        <li class="py-2"><a href="/news/article-75466.htm" title="动物疫苗打几次有效果啊知乎（动物疫苗打几次有效果啊知乎）">动物疫苗打几次有效果啊知乎（动物疫苗打几次有效果啊知乎）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-25-free-v2ray.htm" title="VPN下载 | 3月25日19.5M/S|免费Shadowrocket/SSR/Clash/V2ray免费节点地址">VPN下载 | 3月25日19.5M/S|免费Shadowrocket/SSR/Clash/V2ray免费节点地址</a></li>
                        <li class="py-2"><a href="/news/article-74107.htm" title="十大动物疫苗公司排名榜最新 十大动物疫苗公司排名榜最新图片">十大动物疫苗公司排名榜最新 十大动物疫苗公司排名榜最新图片</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-11-free-high-speed-nodes.htm" title="VPN下载 | 3月11日19.5M/S|免费SSR/Shadowrocket/Clash/V2ray免费节点地址">VPN下载 | 3月11日19.5M/S|免费SSR/Shadowrocket/Clash/V2ray免费节点地址</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">72</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                    </ul>
    </div>
</div>



                </div>
            </div>
        </div>
    </div>
    <!-- //w3l-content-2-->
        <!-- footer -->
    <footer class="w3l-footer-29-main">
        <!-- copyright -->
        <section class="w3l-copyright">
            <div class="container">
                <div class="row bottom-copies">
                    <p class="col-lg-8 copy-footer-29">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                        VPN下载 免费节点订阅中文网 版权所有 Powered by WordPress
                    </p>
                    <div class="col-lg-4 footer-list-29">
                        <ul class="d-flex text-lg-right">
                            <li class="mx-lg-5 mx-md-4 mx-3"><a href="#">Privacy Policy</a></li>
                            <li><a href="#">Contact Us</a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </section>
        <!-- move top -->
        <button onclick="topFunction()" id="movetop" title="Go to top">
            &#10548;
        </button>
        <script>
        // When the user scrolls down 20px from the top of the document, show the button
        window.onscroll = function() {
            scrollFunction()
        };

        function scrollFunction() {
            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                document.getElementById("movetop").style.display = "block";
            } else {
                document.getElementById("movetop").style.display = "none";
            }
        }

        // When the user clicks on the button, scroll to the top of the document
        function topFunction() {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
        }
        </script>
        <!-- /move top -->
    </footer>
    <!--//footer-->
    <!-- Template JavaScript -->
    <script src="/assets/website/js/frontend/clashshare/jquery-3.5.1.min.js"></script>
    <script src="/assets/website/js/frontend/clashshare/theme-change.js"></script>
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })
    });
    </script>
    <!-- disable body scroll which navbar is in active -->
    <!--/MENU-JS-->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!--//MENU-JS-->
    <script src="/assets/website/js/frontend/clashshare/bootstrap.min.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>